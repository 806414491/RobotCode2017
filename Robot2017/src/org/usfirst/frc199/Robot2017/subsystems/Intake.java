// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc199.Robot2017.subsystems;

import org.usfirst.frc199.Robot2017.DashboardInterface;
import org.usfirst.frc199.Robot2017.RobotMap;
import org.usfirst.frc199.Robot2017.commands.*;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class Intake extends Subsystem implements DashboardInterface {

	private final DoubleSolenoid pivotPiston = RobotMap.intakePivotPiston;
	private final SpeedController intakeMotor = RobotMap.intakeIntakeMotor;
	private final SpeedController indexMotor = RobotMap.intakeIndexMotor;

	private boolean isPistonUp = false;
	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	public void initDefaultCommand() {
	}

	public void runIndex(double speed) {
		indexMotor.set(speed);
	}

	public void stopIndex() {
		indexMotor.set(0);
	}

	public void runIntake(double speed) {
		intakeMotor.set(speed);
	}

	public void stopIntake() {
		intakeMotor.set(0);
	}

	public void toggleIntake() {
		isPistonUp = !isPistonUp;
		if (isPistonUp) {
			pivotPiston.set(DoubleSolenoid.Value.kForward);
		} else {
			pivotPiston.set(DoubleSolenoid.Value.kReverse);
		}
	}

	public void stopIntakeDoubleSolenoid() {
		pivotPiston.set(DoubleSolenoid.Value.kOff);
	}

	@Override
	public void displayData() {
	}
}
